PlayerFactory player_factory:
  default_location: loc_nothingthere_village
  resource_factories: 
    - action_points_factory
    - gold_factory
    - health_factory
  skill_factories:
    - skill: herbalism
    - skill: melee_fighting
    - skill: ranged_fighting
    - skill: evasion
    - skill: speed
  statistic_factories:
    - statistic: armor
      base: 0
  container_factory: player_items
  base_actions:
    - help_action
    - me_action
    - stats_action
    - here_action
    - item_action
    - items_action
    - skills_action
    - drop_action
    - equip_action
    - unequip_item_action
    - unequip_slot_action
    - tactic_info_action
    - tactics_list_action
    - set_tactic_action
    - quit_game_action

  item_slots:
    - itemslot_hand
    - itemslot_body

  available_tactics:
    - melee_berserk
    - melee_cautious
    - ranged
    - ranged_cautious

  default_variables: {
    TACTIC: melee_berserk
  }
  tactic: variable(TACTIC)
  default_attack: default_player_attack
  on_killed: player_killed_event

Resource gold: {}

Resource action_points: {}

Resource health:
  vital: True

CreatureResourceFactory gold_factory:
  resource: gold

CreatureResourceFactory action_points_factory:
  resource: action_points
  initial: 60
  max: 60
  base_gen_rate: 12
  clock: clock

CreatureResourceFactory health_factory:
  resource: health
  initial: 10
  max: 10
  base_gen_rate: 10
  clock: clock

Skill herbalism:
  progression: "10 * level**2"
  experience_from_test: "4 * difficulty if success else difficulty"

Skill ranged_fighting:
  progression: "10 * level**2"
  experience_from_test: "4 * difficulty if success else difficulty"

Skill melee_fighting:
  progression: "10 * level**2"
  experience_from_test: "4 * difficulty if success else difficulty"

Skill evasion:
  progression: "20 * level**2"
  experience_from_test: "4 * difficulty if success else difficulty"

Skill speed:
  progression: "100 * level**2"
  experience_from_test: "4 * difficulty if success else difficulty"

Statistic armor: {}

ContainerFactory player_items:
  max_items: 10

Action me_action: { event: me_event }
InfoEvent me_event: {}

Action here_action: { event: here_event }
InfoEvent here_event: {}

Action items_action: {event: items_event}
InfoEvent items_event: {}

Action item_action:
  event: item_info_event
  args:
    item: Item

InfoEvent item_info_event: {}

Action item_action:
  event: item_info_event
  args:
    item: Item

InfoEvent item_info_event: {}

Action tactic_info_action:
  event: tactic_info_event
  args:
    tactic: Tactic

InfoEvent tactic_info_event: {}

Action tactics_list_action:
  event: tactics_list_event
  args:
    tactic: Tactic

InfoEvent tactics_list_event: {}

Action set_tactic_action:
  event: set_tactic_event
  args:
    value: Tactic

VariableSetEvent set_tactic_event:
  variable: TACTIC

Action skills_action: {event: skills_event }
InfoEvent skills_event: {}

Action stats_action: {event: stats_event }
InfoEvent stats_event: {}

Action drop_action:
  event: drop_event
  args:
    number: int
    item: Item

EquipItemEvent equip_event: {}

Action equip_action:
  event: equip_event
  args:
    item: Item

UnequipItemEvent unequip_item_event: {}

Action unequip_item_action:
  event: unequip_item_event
  args:
    item: Item

UnequipSlotEvent unequip_slot_event: {}

Action unequip_slot_action:
  event: unequip_slot_event
  args:
    slot: ItemSlot

RemoveItemEvent drop_event: {}

Attack default_player_attack:
  hit_skill: melee_fighting
  evasion_skill: evasion
  tester: default_tester
  on_hit: default_player_attack_damage

Damage default_player_attack_damage:
  damage_tests_number: 1
  damage_test_mod: 1
  damage_per_hit: 1
  damaged_resource: health
  armor: armor
  tester: default_tester

SequenceEvent player_killed_event:
  events:
    - player_killed_info_event
    - player_killed_resources_event

InfoEvent player_killed_info_event: {}

ResourceChangesEvent player_killed_resources_event:
  resource_changes:
    - resource: health
      value: 1
      op: SET
    - resource: action_points
      value: 0
      op: SET

Action help_action:
  event: help_event
  args:
    what: str

InfoEvent help_event: {}

Action quit_game_action:
  event: quit_game_event

QuitGameEvent quit_game_event: {}
