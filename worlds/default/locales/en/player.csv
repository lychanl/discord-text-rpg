object,string,value
player_factory,WELCOME,"As you wake up in a small, wooden room, you see an older man that walks up to you.

You're finally awake, welcome to this cliche. Take your time, then come talk to me.

You walk out of the room and find yourself in a small fishing village.

_hint: use 'help' for help_"
default_invalid_action_event,EVENT_NOW,"You can't do that... (Invalid command){'\nDid you mean _' + self.params['best_action'].strings['HINT'].replace('*', '\*') + '_?' if self.params['best_similarity'] > 0.5 else ''}"
player_factory,GOODBYE,Bye!
herbalism,NAME,Herbalism
melee_fighting,NAME,Melee fighting
ranged_fighting,NAME,Ranged fighting
evasion,NAME,Evasion
speed,NAME,Speed
gold,VALUE,{value} gold
action_points,VALUE,{value} action points
action_points_factory,VALUE,{value}/{self.max} action points
gold,NAME,gold
action_points,NAME,action points
health,NAME,health points
health,VALUE,{value} health points
health_factory,VALUE,{value}/{self.max} health
armor,NAME,Armor
here_action,REGEX,here
here_action,NAME,here
here_action,INFO,shows info about location, including local actions and travel destinations
here_event,EVENT_NOW,"{self.player.location.strings['YOU_ARE_HERE']}

You may:
{'\n'.join(['- ' + a.strings['NAME'] for a in self.player.location.local_actions + self.player.location.travel_actions if a.visible(self.player)])}"
me_action,REGEX,me
me_action,NAME,me
me_action,INFO,shows some basic info about the player, like resources, items and current location
me_event,EVENT_NOW,"{'\n'.join([r.strings['YOU_HAVE'] for r in self.player.resources.values()])}

You have {self.player.items.strings['USAGE']} items.

{self.player.location.strings['YOU_ARE_HERE']}

Active bonuses:
{'None' if not self.player.timed_bonuses else self.strings['TIMED_BONUSES']}"
me_event,TIMED_BONUSES,"{'\n'.join(bonus.strings['NAME'] + ' (' + str(time - datetime.now()).split('.')[0] + ')' + colon + bonus.strings['INFO'] for bonus, time in self.player.timed_bonuses.items())}"
journal_action,REGEX,journal|quests
journal_action,NAME,journal
journal_action,INFO,lists active quests and their entries
journal_event,EVENT_NOW,"Journal entries:

{'\n\n'.join([' - ' + s.machine.strings['JOURNAL_NAME'] + '\n' + s.strings['JOURNAL_ENTRY'] for s in self.player.passive_states.values() if ('JOURNAL_ENTRY' in s.strings)]) or 'No entries.'}"
stats_action,REGEX,stats|statistics
stats_action,NAME,statistics
stats_action,INFO,shows info about player statistics and current attack
skills_stats_event,EVENT_NOW,"Your skills:
{'\n'.join([self.strings['SKILL', {'skill': skill}] for skill in self.player.skills.values() if skill.value > 0])}

Statistics:
{'\n'.join(self.strings['STAT', {'stat': stat, 'value': value}] for stat, value in self.player.statistics.items())}

Current attack: {self.player.attack.strings['INFO']}"
skills_stats_event,STAT,{stat.strings['NAME']}: {value}
skills_stats_event,SKILL,"{skill.skill.strings['NAME']}: {skill.value}"
items_action,REGEX,items
items_action,NAME,items
items_action,INFO,lists owned items
items_event,SLOT,{slot.strings['NAME'].capitalize()}: {item.strings['NAME'] if item else 'empty'}
items_event,EVENT_NOW,"Equipped:
{'\n'.join(self.strings['SLOT', {'slot': slot, 'item': item}] for slot, item in self.player.item_slots.items())}

Inventory:
{self.player.items.strings['ITEMS']}
({self.player.items.strings['USAGE']})"
drop_action,REGEX,drop (?P<number>\d+ )?(?P<item>.+)
drop_action,HINT,drop * *
drop_action,NAME,drop _n_ _item_
drop_action,INFO,drops item from inventory
drop_event,SUCCESS,"You drop {self.number}x {self.item.strings['NAME']}"
drop_event,FAIL,You don't have enough items to do that.
drop_event,EVENT_NOW,{self.strings['FAIL'] if self.failed else self.strings['SUCCESS']}
skills_action,REGEX,skills
skills_action,NAME,skills
skills_action,INFO,lists skills and their current values
player_killed_info_event,EVENT_NOW,"You regain consciousness after some time."
player_killed_resources_event,CAUSE_NOW,"You are tired and injured, but alive. "
item_action,REGEX,(info )?item (?P<item>.+)
item_action,HINT,item *
item_action,NAME,item _item_
item_action,INFO,shows information about an item
item_info_event,EVENT_NOW,"{self.params['item'].strings['INFO']}"
use_item_action,REGEX,use ((a|an|the) )?(?P<item>.+)
use_item_action,HINT,use *
use_item_action,NAME,use _item_
use_item_action,INFO,uses an item
equip_action,REGEX,equip (?P<item>.+)
equip_action,HINT,equip *
equip_action,NAME,equip _item_
equip_action,INFO,equips an item
unequip_item_action,REGEX,unequip (?P<item>.+)
unequip_item_action,HINT,unequip *
unequip_item_action,NAME,unequip _item_
unequip_item_action,INFO,unequips an item
unequip_slot_action,REGEX,unequip from (?P<slot>.+)
unequip_slot_action,HINT,unequip from *
unequip_slot_action,NAME,unequip from _slot_
unequip_slot_action,INFO,unequips an item
tactic_info_event,CURRENT,"Current tactic: {self.player.tactic.strings['NAME']}
{self.player.tactic.strings['INFO']}"
tactic_info_event,EVENT_NOW,{self.params['tactic'].strings['INFO'] if 'tactic' in self.params else self.strings['CURRENT']}
tactic_info_action,REGEX,tactic( info)?( (?P<tactic>.+))?
tactic_info_action,HINT,tactic *
tactic_info_action,NAME,tactic _tactic_
tactic_info_action,INFO,gives info about a tactic (current tactic if none given)
tactics_list_event,EVENT_NOW,"Available tactics:
{'\n'.join([tactic.strings['NAME'] for tactic in self.player.available_tactics])}"
tactics_list_action,REGEX,(list )?(available )?tactics
tactics_list_action,NAME,list tactics
tactics_list_action,INFO,lists available tactics
set_tactic_action,REGEX,set (?P<value>.+) tactic
set_tactic_action,HINT,set * tactic
set_tactic_action,NAME,set _tactic_ tactic
set_tactic_action,INFO,sets current tactic
set_tactic_event,EVENT_NOW,Tactic set.
default_player_attack,NAME,fist
quit_game_action,NAME,exit
quit_game_action,REGEX,exit
quit_game_ask_sm_enter,EVENT_NOW,"Are you sure?{self.player.strings['POSSIBLE_STATE_ACTIONS_HINT']}"
invalid_quit_game_response_event,EVENT_NOW,"Please confirm or cancel quitting game.{self.player.strings['POSSIBLE_STATE_ACTIONS_HINT']}"
confirm_quit_game,REGEX,yes
confirm_quit_game,NAME,yes
reject_quit_game,REGEX,no
reject_quit_game,NAME,no
quit_game_ask_sm_exit,EVENT_NOW,Ok!