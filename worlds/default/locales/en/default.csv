object,string,value
Location,YOU_ARE_HERE,"You are in {self.strings['NAME']}"
Market,YOU_ARE_HERE,"You are in {self.strings['NAME']}"
Location,REGEX_NAME,{self.strings['NAME']}
Market,REGEX_NAME,{self.strings['NAME']}
TravelAction,REGEX,Travel( to)? {self.to.strings['REGEX_NAME']}
TravelAction,NAME,Travel to {self.to.strings['NAME']}
TravelEventResult,EVENT_NOW,You travel to {self.to.strings['NAME']}.
CreatureResource,YOU_HAVE,"You have {self.strings['VALUE', {'value': self.value}]}"
CreatureResource,VALUE,"{self.resource.strings['VALUE', {'value': self.value}]}"
ResourceChangeEventResult,EVENT_NOW,"{self.strings['CAUSE_NOW']}{' '.join([('You get ' if v > 0 else 'You loose ') + r.strings['VALUE', {'value': abs(v)}] + '.' for r, v in self.resource_changes.items() if not v == 0])}"
ResourceChangeEventResult,CAUSE_NOW,
ItemReceivedEventResult,EVENT_NOW,"{self.strings['CAUSE_NOW']}You get {self.number}x {self.item.strings['NAME']}.{'You dropped ' + str(self.overflow.stack.number) + ' because you have no more space.' if self.overflow else ''}"
ItemReceivedEventResult,CAUSE_NOW,
Container,USAGE,{len(self.items)}/{self.max_items}
Container,ITEMS,{'\n'.join(str(i.stack) + 'x ' + i.item.strings['NAME'] + ' (max ' + str(i.item.max_stack) + ')' for i in self.items) if self.items else 'No items.'}
SellEventResult,EVENT_NOW,You sell {self.number}x {self.item.strings['NAME']} for {self.value}
SellAction,NAME,Sell item
SellAction,REGEX,sell( (?P<number>\d+))? (?P<item>.+)
BuyEventResult,EVENT_NOW,You buy {self.number}x {self.item.strings['NAME']} for {self.value}
BuyAction,NAME,Buy item
BuyAction,REGEX,buy( (?P<number>\d+))? (?P<item>.+)
TradeOffer,DESCRIPTION,"{self.item.strings['NAME']}: {'sell ' + str(self.sell_value) if self.sell_value else ''}{', ' if self.sell_value and self.buy_value else ''}{'buy ' + str(self.buy_value) + ' ' if self.buy_value else ''}"
OffersInfoEventResult,EVENT_NOW,{'\n'.join(offer.strings['DESCRIPTION'] for offer in self.offers)}
OffersInfoAction,NAME,See offers
OffersInfoAction,REGEX,((see|check|list) )?(offer|offers)(( for)? (?P<item>.+))?
Player,NAME,Player
FightEventResult,GROUP,"{', '.join(f.strings['NAME'] for f in group)}"
FightEventResult,GROUP_S,{'s' if len(group) == 1 else ''}
FightEventResult,RESULT_G,"{self.strings['GROUP', {'group': group}]} win{self.strings['GROUP_S', {'group': group}]}!"
FightEventResult,RESULT_DRAW,It's a draw!
FightEventResult,RESULT,"{self.strings['RESULT_DRAW'] if self.result.name == 'DRAW' else self.strings['RESULT_G', {'group': self.winners}]}"
FightEventResult,EVENT_NOW,"{self.strings['GROUP', {'group': self.group1}]} fight{self.strings['GROUP_S', {'group': self.group1}]} against {self.strings['GROUP', {'group': self.group2}]}.
{'\n'.join(e.strings['EVENT_NOW'] for e in self.events)}
{self.strings['RESULT']}{'\n' + self.next.strings['EVENT_NOW'] if self.next else ''}{'\n' + self.on_killed.strings['EVENT_NOW'] if self.on_killed else ''}"
MoveEventResult,EVENT_NOW,"{self.fighter.strings['NAME']} moves to {self.to_loc.strings['NAME']}"
AttackEventResult,EVENT_NOW,"{self.attacker.strings['NAME']} attacks {self.target.strings['NAME']} {self.strings['HIT'] if any(self.hits) else self.strings['MISS']}"
AttackEventResult,HIT,"and hits, dealing {sum(r.damage_dealt for r, h in zip(self.results, self.hits) if h)} damage"
AttackEventResult,MISS,but misses
DefeatedEventResult,EVENT_NOW,{self.fighter.strings['NAME']} was defeated!
MoveDestination.MELEE,NAME,melee
MoveDestination.RANGED,NAME,ranged
MoveDestination.MELEE,MOVE_TO,move to melee
MoveDestination.RANGED,MOVE_TO,move to ranged
MoveDestination.FLEE,MOVE_TO,flee
SequenceEventResult,EVENT_NOW,"{'\n'.join(r.strings['EVENT_NOW'] for r in self.results)}"
Item,INFO,"It's a {self.strings['NAME']}{'\n' + self.strings['STATS'] if self.statistic_bonuses else ''}"
Item,STATS,"{'\n'.join(stat.strings['NAME'] + ' ' + '%+d' % bonus for stat, bonus in self.statistic_bonuses.items())}"
EquipEventResult,EVENT_NOW,You equip {self.item.strings['NAME']} to your {self.item.slot.strings['NAME']}
UnequipEventResult,EVENT_NOW,You remove {self.item.strings['NAME']} from your {self.item.slot.strings['NAME']}
Tactic,INFO,"{self.strings['PREDICATES', {'predicates': self.move_predicates}]}
{self.strings['PREDICATES', {'predicates': self.action_predicates}]}"
Tactic,PREDICATES,"{'\n'.join(('' if i == 0 else 'else ') + pred.strings['INFO'] for i, pred in enumerate(predicates))}"
MovePredicate,INFO,{('if ' + ' and '.join(cond.strings['INFO'] for cond in self.conditions) + ' then ') if self.conditions else ''}{self.result.strings['MOVE_TO']}
ActionPredicate,INFO,{('if ' + ' and '.join(cond.strings['INFO'] for cond in self.conditions) + ' then ') if self.conditions else ''}{self.result.strings['NAME']} if possible
TacticCondition,INFO,{self.quantifier.strings['NAME']} {self.condition.strings['NAME']}
TacticQuantifier.ANY_ENEMY,NAME,any enemy is
TacticQuantifier.ALL_ENEMIES,NAME,all enemies are
TacticQuantifier.ANY_ALLY,NAME,any ally is
TacticQuantifier.ALL_ALLIES,NAME,all allies are
TacticQuantifier.SELF,NAME,you are
StatusFlag.MELEE,NAME,in melee distance
StatusFlag.RANGED,NAME,in ranged distance
StatusFlag.LOW_HEALTH,NAME,at low health
StatusFlag.HIGH_HEALTH,NAME,at high health
StatusFlag.FULL_HEALTH,NAME,at full health
FightAction.EMPTY,NAME,do nothing
FightAction.ATTACK,NAME,attack