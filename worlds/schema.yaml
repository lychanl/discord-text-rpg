Location:
  _class: dtrpg.core.map.Location
  travel_actions: [ TravelAction ]
  optional local_actions: [ Action ]

Market:
  _class: dtrpg.core.map.Market
  _base: Location
  required offers: [ TradeOffer ]

TradeOffer:
  _class: dtrpg.core.item.TradeOffer
  optional buy_value: int
  optional sell_value: int
  required resource_id: str
  required item: Item

Action:
  _class: dtrpg.core.events.Action
  optional costs: [ ResourceCost ]
  optional args: { str: type }
  required event: Event

Event:
  _class: dtrpg.core.events.Event
  _abstract: True

ResourceChangesEvent:
  _class: dtrpg.core.events.ResourceChangesEvent
  _base: Event
  required resource_changes: [ ResourceChange ]

ResourceChangeEventResult:
  _class: dtrpg.core.events.ResourceChangeEventResult

ItemReceiveEvent:
  _class: dtrpg.core.events.ItemReceiveEvent
  _base: Event
  required item_factory: ItemStackFactory

ItemReceivedEventResult:
  _class: dtrpg.core.events.ItemReceivedEventResult

TravelAction:
  _class: dtrpg.core.map.TravelAction
  required to: Location

TravelEvent:
  _class: dtrpg.core.map.TravelEvent
  _base: Event
  required to: Location

TravelEventResult:
  _class: dtrpg.core.map.TravelEventResult

InfoEvent:
  _class: dtrpg.core.events.InfoEvent
  _base: Event

RemoveItemEvent:
  _class: dtrpg.core.events.RemoveItemEvent
  _base: Event
  optional item: Item
  optional number: int

OffersInfoAction:
  _class: dtrpg.core.events.OffersInfoAction
  _base: Action

OffersInfoEvent:
  _class: dtrpg.core.events.OffersInfoEvent
  _base: Event

OffersInfoEventResult:
  _class: dtrpg.core.events.OffersInfoEventResult

BuyAction:
  _class: dtrpg.core.events.BuyAction
  _base: Action

BuyEvent:
  _class: dtrpg.core.events.BuyEvent
  _base: Event

BuyEventResult:
  _class: dtrpg.core.events.BuyEventResult

SellAction:
  _class: dtrpg.core.events.SellAction
  _base: Action

SellEvent:
  _class: dtrpg.core.events.SellEvent
  _base: Event

SellEventResult:
  _class: dtrpg.core.events.SellEventResult

PlayerFactory:
  _class: dtrpg.core.player.PlayerFactory
  required default_location: Location
  required container_factory: ContainerFactory
  optional resource_factories: [ ResourceFactory ]
  optional base_actions: [ Action ]

Player:
  _class: dtrpg.core.player.Player

Container:
  _class: dtrpg.core.item.Container

ContainerFactory:
  _class: dtrpg.core.item.ContainerFactory
  required max_items: int

Item:
  _class: dtrpg.core.item.Item
  optional max_stack: int

ItemStackFactory:
  _class: dtrpg.core.item.ItemStackFactory
  required item: Item
  optional stack: int

ResourceFactory:
  _class: dtrpg.core.player.ResourceFactory
  required id: str
  optional initial: int
  optional max: int
  optional base_gen_rate: float
  optional clock: Clock

Resource:
  _class: dtrpg.core.player.Resource

ResourceChange:
  _class: dtrpg.core.player.ResourceChange
  required id: str
  required value: int

ResourceCost:
  _class: dtrpg.core.player.ResourceCost
  required id: str
  required cost: int

Config:
  _class: dtrpg.core.Config
  required player_factory: PlayerFactory

Clock:
  _class: dtrpg.core.Clock
  optional base: int

Tester:
  _class: dtrpg.core.Tester
  _abstract: True

ProportionalTester:
  _class: dtrpg.core.ProportionalTester
  _base: Tester

DifferentialTester:
  _class: dtrpg.core.DifferentialTester
  _base: Tester
  
  optional const: int
  optional perc_limit: int

ThresholdTester:
  _class: dtrpg.core.ThresholdTester
  _base: Tester